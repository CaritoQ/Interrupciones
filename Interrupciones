/*Realizar un ejercicio en el cual tenga las etapas de: 
 * (i)Ingreso de datos, al ingresar la palabra solo pueden ser números por comunicación serial.
 * (ii)Ordenamiento, una vez ingresados lo números, ordenarlos de menor a mayor e imprimirlo por comunicación serial.
 */
int i=0; 
int x;
int pos = 0;
int sel = 0;
int reem;
String ingreso;
String cifra;

int aux;
void setup() {
 
  Serial.begin(9600);
  Serial.println("ORDENAR VECTORES");
  Serial.println("Para iniciar presione el botón");
}

void boton() {
   
  switch (pos) {
    case 0:
      Serial.println("Presione el boton 2 y digite un numero");
      if (pos == 1) {
    Serial.println("Escribir numero");
    sel++;
      }
      pos++;
      break;
    case 1:
      Serial.println("Ordenamiento del numero");
      pos++;;
      break;
    default:
      pos = 0;
      sel = 0;
      break;
  }
 
}
void loop() {
  if (sel == 1 && pos == 1) {
    if (Serial.available() > 0) {
      ingreso = Serial.readString();
      Serial.println("El número es:");
      Serial.println("Para ordenar el número ingresado presione el botón");
    }
  }
  else if (pos == 2 && ingreso != "") { //Comprueba si el campo está lleno para ejecutarse
    int num[ingreso.length()];           //Guardar los datos
    for (i = 0; i < ingreso.length(); i++) {   //Aquí se crea el vector
      cifra= ingreso.substring(i, (i + 1));
      num[i]= cifra.toInt();    
      
    }
    do {                                    //Orden de a cifra ingresada
      reem = 0;
      for (i = 0; i < ingreso.length(); i++) { 
        if (num[i] > num[i + 1]) {          //Compara las posiciones de los números ingresados
          reem = 1;
          aux = num[i];
          num[i] = num[i + 1];
          num[i + 1] = aux;
        }
      }
    }
    while (reem);
    for (i = 0; i < ingreso.length(); i++) { 
      Serial.print(num[i]);
    }
    Serial.println(" ");
    ingreso = "";
  }
}

